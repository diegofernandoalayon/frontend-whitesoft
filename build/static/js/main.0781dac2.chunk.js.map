{"version":3,"sources":["components/ListaPaises/index.js","services/getPaises.js","services/serviceUsers.js","App.js","reportWebVitals.js","index.js"],"names":["ListaPaises","text","value","fetch","then","data","json","response","console","log","method","mode","headers","body","JSON","stringify","App","useState","paises","setPaises","selectedPais","setSelectedPais","name","setName","useEffect","servicePaises","className","onSubmit","event","preventDefault","serviceUsers","nombre","pais","onChange","target","placeholder","required","disabled","map","common","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNACe,SAASA,EAAT,GAAmC,IAAbC,EAAY,EAAZA,KAAKC,EAAO,EAAPA,MAExC,OACE,wBAAQA,MAAOA,EAAf,SACGD,I,UCDQ,EAJH,kBAAIE,MAAM,sCACrBC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAG,GAAQ,OAAEA,MCaA,EAZH,SAACF,GAEZ,OADAG,QAAQC,IAAIJ,GACLF,MALO,sDAKO,CACnBO,OAAO,OACPC,KAAM,OACNC,QAAS,CACP,eAAgB,oBAGlBC,KAAKC,KAAKC,UAAUV,MCwDTW,MA7Df,WAEE,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAwCF,mBAAS,IAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACA,EAAwBJ,mBAAS,IAAjC,mBAAOK,EAAP,KAAaC,EAAb,KAkCA,OAjCAC,qBAAU,WACRC,IAAoBrB,MAAK,SAACC,GACxBc,EAAUd,QAEZ,IA8BA,sBAAKqB,UAAU,MAAf,UACE,4CACA,uBAAMC,SA9BW,SAACC,GACpBA,EAAMC,iBACY,KAAfT,GAA8B,KAATE,IAEtBd,QAAQC,IAAI,UACZD,QAAQC,IAAIW,EAAcE,GAC1BQ,EAAkB,CAChBC,OAAOT,EACPU,KAAKZ,IAEJhB,MAAK,SAACC,GACLG,QAAQC,IAAIJ,GACZkB,EAAQ,SAkBkBG,UAAU,OAAxC,UACA,uBACAO,SATqB,SAACL,GACxBL,EAAQK,EAAMM,OAAOhC,QASnBA,MAAOoB,EACPa,YAAY,6BACZC,UAAQ,IAER,yBAAQH,SAlBa,SAACL,GACxBP,EAAgBO,EAAMM,OAAOhC,QAiB3B,UACE,wBAAQmC,UAAQ,EAAhB,kBACA,uDACCnB,EAAOoB,KAAI,SAACN,GAAD,OACV,cAAChC,EAAD,CAAoCC,KAAM+B,EAAKV,KAAKiB,OAAQrC,MAAO8B,EAAKV,KAAKiB,QAA3DP,EAAKV,KAAKiB,cAGhC,mDClDSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtC,MAAK,YAAkD,IAA/CuC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.0781dac2.chunk.js","sourcesContent":["\r\nexport default function ListaPaises({text,value}){\r\n\r\n  return(\r\n    <option value={value}>\r\n      {text}\r\n    </option>\r\n  )\r\n}","const get = ()=>fetch('https://restcountries.com/v3.1/all')\r\n.then(data => data.json())\r\n.then(response=>response)\r\n\r\nexport default {get}","const baseUrl = 'https://secure-temple-74134.herokuapp.com/api/users'\r\n// const baseUrl = 'http://localhost:2000/api/users'\r\n\r\nconst post = (data) =>{\r\n  console.log(data)\r\n  return fetch(baseUrl,{\r\n    method:'POST',\r\n    mode: 'cors',\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \r\n    },\r\n    body:JSON.stringify(data)\r\n  })\r\n}\r\nexport default  { post}","\nimport { useEffect, useState } from 'react';\nimport ListaPaises from './components/ListaPaises';\nimport './App.css';\nimport servicePaises from './services/getPaises'\nimport serviceUsers from './services/serviceUsers';\n\nfunction App() {\n  \n  const [paises, setPaises] = useState([])\n  const [selectedPais, setSelectedPais] = useState('')\n  const [name, setName] = useState('')\n  useEffect(()=>{\n    servicePaises.get().then((data)=>{\n      setPaises(data)\n    })\n  },[])\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    if(selectedPais!=='' && name !== ''){\n\n      console.log('Submit')\n      console.log(selectedPais, name)\n      serviceUsers.post({\n        nombre:name,\n        pais:selectedPais\n      })\n        .then((data)=>{\n          console.log(data)\n          setName('')\n          // setSelectedPais('')\n\n        })\n    }\n    \n  }\n  const handleChangePais = (event) => {\n    setSelectedPais(event.target.value)\n  \n  }\n  const handleChangeName = (event) => {\n    setName(event.target.value)\n\n  }\n  return (\n    <div className=\"App\">\n      <h1>Formulario</h1>\n      <form onSubmit={handleSubmit} className=\"form\">\n      <input \n      onChange={handleChangeName} \n      value={name} \n      placeholder=\"ingrese su nombre completo\"\n      required\n      />\n      <select onChange={handleChangePais}>\n        <option disabled>Pais</option>\n        <option>Selecione un pais</option>\n        {paises.map((pais) => (\n          <ListaPaises key={pais.name.common} text={pais.name.common} value={pais.name.common}/>\n        ))}\n      </select>\n      <button>Enviar</button>\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}